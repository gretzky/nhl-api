{"code":"import { throwError, handleUrl, get } from '../util';\r\nexport default async function getGame(options) {\r\n    const baseUrl = handleUrl('game', options);\r\n    const url = () => {\r\n        if (options.type.includes('feed') || options.type.includes('live')) {\r\n            return `${baseUrl}/feed/live`;\r\n        }\r\n        return `${baseUrl}/${options.type}`;\r\n    };\r\n    if (!options || !options.id) {\r\n        throwError('getGame', 'Must include a game ID.');\r\n    }\r\n    try {\r\n        const response = await get(url(), options).then((data) => {\r\n            delete data.copyright, data.metaData;\r\n            return data;\r\n        });\r\n        //const response = await get('game', url(), options).then(res => res);\r\n        return Promise.resolve(response);\r\n    }\r\n    catch (err) {\r\n        return throwError('getGame', err);\r\n    }\r\n}\r\n//# sourceMappingURL=index.js.map","references":["/Users/sara/dev/nhlapi2/packages/client/src/util/index.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/game/index.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,EAAE,MAAM,SAAS,CAAC;AAOrD,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,OAAO,CAAC,OAAoB;IACxD,MAAM,OAAO,GAAG,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAE3C,MAAM,GAAG,GAAG,GAAG,EAAE;QACf,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAClE,OAAO,GAAG,OAAO,YAAY,CAAC;SAC/B;QACD,OAAO,GAAG,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC;IACtC,CAAC,CAAC;IAEF,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE;QAC3B,UAAU,CAAC,SAAS,EAAE,yBAAyB,CAAC,CAAC;KAClD;IAED,IAAI;QACF,MAAM,QAAQ,GAAG,MAAM,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;YAC5D,OAAO,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC;YACrC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,sEAAsE;QACtE,OAAO,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KAClC;IAAC,OAAO,GAAG,EAAE;QACZ,OAAO,UAAU,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;KACnC;AACH,CAAC\"}","dts":{"name":"/Users/sara/dev/nhlapi2/packages/client/src/game/index.d.ts","writeByteOrderMark":false,"text":"declare type GameOptions = {\r\n    id: number | string;\r\n    type: string;\r\n};\r\nexport default function getGame(options: GameOptions): Promise<void>;\r\nexport {};\r\n"}}
