{"code":"import { get, throwError, handleUrl } from '../util';\r\nexport default async function getPlayer(options) {\r\n    const baseUrl = handleUrl('people', options);\r\n    const url = options.stats ? `${baseUrl}/stats` : baseUrl;\r\n    if (!options.id && !options.name) {\r\n        throwError('getPlayer', 'Must include a player ID, name, or nickname as a param.');\r\n    }\r\n    if (options.season && options.season.toString().length !== 8) {\r\n        throwError('getPlayer', `Season must be formatted as both full years, i.e. '20192020'.`);\r\n    }\r\n    const handleData = (data) => {\r\n        if (options.stats) {\r\n            if (data.stats.length > 1) {\r\n                // if we have more than 1 stat objects, return those\r\n                return data.stats;\r\n            }\r\n            else if (data.stats[0].splits.length > 1) {\r\n                // if we have 1 stat object, but multiple splits, return those\r\n                return data.stats[0].splits;\r\n            }\r\n            // otherwise, return the single split object in the single stat array\r\n            return data.stats[0].splits[0];\r\n        }\r\n        return data.people[0];\r\n    };\r\n    try {\r\n        const response = await get(url, options).then((data) => handleData(data));\r\n        return Promise.resolve(response);\r\n    }\r\n    catch (err) {\r\n        return throwError('getPlayer', err);\r\n    }\r\n}\r\n//# sourceMappingURL=index.js.map","references":["/Users/sarapope/dev/nhl-api2/packages/client/src/util/index.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/player/index.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE,SAAS,EAAqB,MAAM,SAAS,CAAC;AAYxE,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,SAAS,CAAC,OAAsB;IAC5D,MAAM,OAAO,GAAG,SAAS,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAE7C,MAAM,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,OAAO,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC;IAEzD,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;QAChC,UAAU,CACR,WAAW,EACX,yDAAyD,CAC1D,CAAC;KACH;IAED,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;QAC5D,UAAU,CACR,WAAW,EACX,+DAA+D,CAChE,CAAC;KACH;IAED,MAAM,UAAU,GAAG,CAAC,IAAS,EAAE,EAAE;QAC/B,IAAI,OAAO,CAAC,KAAK,EAAE;YACjB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzB,oDAAoD;gBACpD,OAAO,IAAI,CAAC,KAAK,CAAC;aACnB;iBAAM,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1C,8DAA8D;gBAC9D,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;aAC7B;YACD,qEAAqE;YACrE,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SAChC;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC;IAEF,IAAI;QACF,MAAM,QAAQ,GAAG,MAAM,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE,CAC1D,UAAU,CAAC,IAAI,CAAC,CACjB,CAAC;QACF,OAAO,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KAClC;IAAC,OAAO,GAAG,EAAE;QACZ,OAAO,UAAU,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;KACrC;AACH,CAAC\"}","dts":{"name":"/Users/sarapope/dev/nhl-api2/packages/client/src/player/index.d.ts","writeByteOrderMark":false,"text":"import { RequireAtLeastOne } from '../util';\r\ndeclare type Options = {\r\n    id?: number | string;\r\n    name?: string;\r\n};\r\ndeclare type PlayerOptions = RequireAtLeastOne<Options, 'id' | 'name'> & {\r\n    season?: string | number;\r\n    stats?: string;\r\n};\r\nexport default function getPlayer(options: PlayerOptions): Promise<void>;\r\nexport {};\r\n"}}
