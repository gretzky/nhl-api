{"code":"import teams from '@nhl-api/teams';\r\nimport { throwError, get } from '../util';\r\nexport default async function getTeams(options) {\r\n    if (options.season && options.season.toString().length !== 8) {\r\n        throwError('getTeams', `Season must be formatted as both full years, i.e. '20192020'.`);\r\n    }\r\n    const id = options.name\r\n        ? teams.filter((team) => team.name === options.name)[0].id\r\n        : options.id;\r\n    const baseUrl = options.id || options.name ? `/teams/${id}` : `/teams`;\r\n    const url = options.expand && options.expand.includes('roster')\r\n        ? `${baseUrl}/roster`\r\n        : options.expand && options.expand.includes('stats')\r\n            ? `${baseUrl}/stats`\r\n            : baseUrl;\r\n    if (options.expand) {\r\n        options.expand = `team.${options.expand}`;\r\n    }\r\n    const activeTeams = teams.filter((team) => team.isActive);\r\n    try {\r\n        const response = await get(url, options).then((data) => {\r\n            if (data.roster) {\r\n                return data.roster;\r\n            }\r\n            if (data.stats) {\r\n                return data.stats;\r\n            }\r\n            if (Array.isArray(data) && data.some(d => d.abbreviation)) {\r\n                // if we've fetched all teams, merge the payload with the team objects from @nhl-api/teams to include other assets (logos, goal horns, etc.)\r\n                return data.map((d, i) => Object.assign({}, d, activeTeams[i]));\r\n            }\r\n            else if (data.hasOwnProperty('abbreviation')) {\r\n                // do the same as above but for an individual team\r\n                return Object.assign({}, data, activeTeams.find((team) => team.id === data.id));\r\n            }\r\n            return data;\r\n        });\r\n        return Promise.resolve(response);\r\n    }\r\n    catch (err) {\r\n        return throwError('getTeams', err);\r\n    }\r\n}\r\n//# sourceMappingURL=index.js.map","references":["/Users/sara/dev/nhlapi2/packages/teams/dist/index.d.ts","/Users/sara/dev/nhlapi2/packages/client/src/util/index.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/teams/index.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,MAAM,gBAAgB,CAAC;AACnC,OAAO,EAAE,UAAU,EAAE,GAAG,EAAqB,MAAM,SAAS,CAAC;AAU7D,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,QAAQ,CAAC,OAAoB;IACzD,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;QAC5D,UAAU,CACR,UAAU,EACV,+DAA+D,CAChE,CAAC;KACH;IAED,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI;QACrB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QAC/D,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;IACf,MAAM,OAAO,GACX,OAAO,CAAC,EAAE,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;IAEzD,MAAM,GAAG,GACP,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACjD,CAAC,CAAC,GAAG,OAAO,SAAS;QACrB,CAAC,CAAC,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC;YACpD,CAAC,CAAC,GAAG,OAAO,QAAQ;YACpB,CAAC,CAAC,OAAO,CAAC;IAEd,IAAI,OAAO,CAAC,MAAM,EAAE;QAClB,OAAO,CAAC,MAAM,GAAG,QAAQ,OAAO,CAAC,MAAM,EAAE,CAAC;KAC3C;IAED,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAE/D,IAAI;QACF,MAAM,QAAQ,GAAG,MAAM,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;YAC1D,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,OAAO,IAAI,CAAC,MAAM,CAAC;aACpB;YACD,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,OAAO,IAAI,CAAC,KAAK,CAAC;aACnB;YACD,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE;gBACzD,4IAA4I;gBAC5I,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACjE;iBAAM,IAAI,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;gBAC9C,kDAAkD;gBAClD,OAAO,MAAM,CAAC,MAAM,CAClB,EAAE,EACF,IAAI,EACJ,WAAW,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,CACrD,CAAC;aACH;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KAClC;IAAC,OAAO,GAAG,EAAE;QACZ,OAAO,UAAU,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;KACpC;AACH,CAAC\"}","dts":{"name":"/Users/sara/dev/nhlapi2/packages/client/src/teams/index.d.ts","writeByteOrderMark":false,"text":"import { RequireAtLeastOne } from '../util';\r\ninterface Options {\r\n    id?: string | number;\r\n    name?: string;\r\n    expand?: string;\r\n    season?: string | number;\r\n}\r\ndeclare type TeamOptions = RequireAtLeastOne<Options, 'id' | 'name'>;\r\nexport default function getTeams(options: TeamOptions): Promise<any>;\r\nexport {};\r\n"}}
