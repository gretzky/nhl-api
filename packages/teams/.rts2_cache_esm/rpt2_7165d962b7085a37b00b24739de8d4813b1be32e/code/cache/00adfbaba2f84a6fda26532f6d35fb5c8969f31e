{"code":"import teams from './teams';\r\n// search for a team id based on a given string\r\n// adding `toUpperCase` makes the search case insensitive\r\nconst getTeamId = (name) => {\r\n    const t = teams.filter(team => team.name.includes(name.toUpperCase()) ||\r\n        // we don't explicitly match the nickname here because most team nicknames don't overlap and this allows for some wiggle room\r\n        team.nicknames.some(nickname => nickname.includes(name.toUpperCase())));\r\n    if (t.length > 1) {\r\n        // if the query matches more than 1 team, return the array of players\r\n        return t;\r\n    }\r\n    // team found, return the id\r\n    return t[0].id;\r\n};\r\nexport default getTeamId;\r\n//# sourceMappingURL=getTeamId.js.map","references":["/Users/sarapope/dev/nhl-api2/packages/teams/src/teams.ts"],"map":"{\"version\":3,\"file\":\"getTeamId.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/getTeamId.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,MAAM,SAAS,CAAC;AAU5B,+CAA+C;AAC/C,yDAAyD;AACzD,MAAM,SAAS,GAAG,CAAC,IAAY,EAAmB,EAAE;IAClD,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CACpB,IAAI,CAAC,EAAE,CACL,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACtC,6HAA6H;QAC7H,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CACzE,CAAC;IACF,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;QAChB,qEAAqE;QACrE,OAAO,CAAC,CAAC;KACV;IACD,4BAA4B;IAC5B,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACjB,CAAC,CAAC;AAEF,eAAe,SAAS,CAAC\"}","dts":{"name":"/Users/sarapope/dev/nhl-api2/packages/teams/src/getTeamId.d.ts","writeByteOrderMark":false,"text":"interface Team {\r\n    id: number;\r\n    name: string;\r\n    abbreviation: string;\r\n    nicknames: string[];\r\n    colors: string[];\r\n}\r\ndeclare const getTeamId: (name: string) => number | Team[];\r\nexport default getTeamId;\r\n"}}
